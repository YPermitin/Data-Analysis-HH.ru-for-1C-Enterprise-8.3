
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	client_id = "VRJVLR41NI354P2DPQ1ONE8DL93BOI02N51EC78VTTLB5JLDGMSAE74SIPB3LS3A"; 
	СтраницаАвторизации = "https://hh.ru/oauth/authorize?response_type=code&client_id="+client_id+"&state=letsStartAgain";
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницаАвторизацииДокументСформирован(Элемент)
	
	Если ПеременнаяСодержитСвойство(Элемент, "Документ") Тогда
		ТекущийURLСтраницы = ПолучитьТекущийURLСтраницы(Элемент.Документ);
		Если ЗначениеЗаполнено(ТекущийURLСтраницы) Тогда		
			СтрокаНачалаКодаАвторизации = "&code=";
			ИндексНачалаКодаАвторизации = СтрНайти(ТекущийURLСтраницы, СтрокаНачалаКодаАвторизации);
			Если ИндексНачалаКодаАвторизации > 0 Тогда
				НачалоКодаАвторизации = ИндексНачалаКодаАвторизации + СтрДлина(СтрокаНачалаКодаАвторизации);	
				КодАвторизации = Сред(ТекущийURLСтраницы, НачалоКодаАвторизации, СтрДлина(ТекущийURLСтраницы) - НачалоКодаАвторизации + 1);
				КодАвторизацииПолучен = Истина;
				СтраницаАвторизации = Неопределено;
				Закрыть();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекущийURLСтраницы(ДокументБраузера)
	
	URLСтраницы = Неопределено;
	
	// Получение URL для клиента из под Windows
	Если ПеременнаяСодержитСвойство(ДокументБраузера, "URLUnencoded") Тогда
		URLСтраницы = ДокументБраузера.URLUnencoded;
	// Получение URL для клиента из под Linux
	ИначеЕсли ПеременнаяСодержитСвойство(ДокументБраузера, "URL") Тогда
		URLСтраницы = ДокументБраузера.URL;
	ИначеЕсли ПеременнаяСодержитСвойство(ДокументБраузера, "documentURI") Тогда
		URLСтраницы = ДокументБраузера.documentURI;
	КонецЕсли;
	
	Возврат URLСтраницы;
	
КонецФункции

&НаКлиенте
Процедура ПриЗакрытии()
	
	Если КодАвторизацииПолучен Тогда
		СтруктураРезультат = Новый Структура;
		СтруктураРезультат.Вставить("КодАвторизации", КодАвторизации);
		ОповеститьОВыборе(СтруктураРезультат);
	КонецЕсли;
	
КонецПроцедуры

#Область Служебные

// Универсальная функция для проверки наличия 
// свойств у значения любого типа данных
// Переменные:
// 1. Переменная - переменная любого типа, 
// для которой необходимо проверить наличие свойства
// 2. ИмяСвойства - переменная типа "Строка", 
// содержащая искомое свойства
// 
&НаКлиенте
Функция ПеременнаяСодержитСвойство(Переменная, ИмяСвойства)
     // Инициализируем структуру для теста 
     // с ключом (значение переменной "ИмяСвойства") 
     // и значением произвольного GUID'а
     GUIDПроверка = Новый УникальныйИдентификатор;
     СтруктураПроверка = Новый Структура;
     СтруктураПроверка.Вставить(ИмяСвойства, GUIDПроверка);
     // Заполняем созданную структуру из переданного 
     // значения переменной
     ЗаполнитьЗначенияСвойств(СтруктураПроверка, Переменная);
     // Если значение для свойства структуры осталось 
     // NULL, то искомое свойство не найдено, 
     // и наоборот.
     Если СтруктураПроверка[ИмяСвойства] = GUIDПроверка Тогда
          Возврат Ложь;
     Иначе
          Возврат Истина;
     КонецЕсли;
КонецФункции

#КонецОбласти